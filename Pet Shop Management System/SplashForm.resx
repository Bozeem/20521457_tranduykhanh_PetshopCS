<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2CirclePictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAANmSURBVFhH7ZZtSFNRGMdXGUX0tvmWUUloUSRGSVGg6YeEiJIsrE+G0z5YWKGl9J4YGb1BzSnI
        Nl9S00QKnVtq2iSzMtPCSE2dDozKUSu3e/e+PZ17O6u53ekUlQh/8P+wc57zf/733HvuLmuG/xa1iB1K
        CNjB+Of0ocz2XkgIOEKNkANqEWc7Hp4eVLnsJYSQ00I1R/oBPNY8PDX1gDhkAVkW9BM3p0UULLPqxOES
        XDK16MRhMvvmlOrSfOFxqh/oaqN24DL3oLYSGQg0Is6QRuipRCpR5y7ywtNOGOr2RGtE3iOaU6o47geN
        F3yBuLfK3HEnuLvh8qYreIlrAFizUOMGRzO1kKMYFi7m4LI/gCzCQ1u2QetY76jOTDbwDviY8DLXEKKl
        G5kMKGlL/ItxGQ1A+mxdZWiTYx1R5A/m9tMA8rsA/XybCHV75tinQi1k78VGZrQTGWoB+wyR72M0PD0I
        1q5rFqoG8iPm62t3J5MPglT2jW0yNh4ioT9LifQe5NnJSPtRAH+6wViQAq8QyoQoXEGQ9wP1ZHGAxfw2
        jb4Ka88tp2ZMMr06iq+atxXbuo+uMqzGybAliTY0vUwcMe5KOMAwyNI9sK176GujIjUiT2fDF0fQ/cwC
        snS90xyTTC3HUICsamzrPnpxhJjJ0FAfDcZnsU7jTCJLAsH68ToKzE/Btu6je7Stk9G0OIA6y07jNhH5
        fmB8Hoce0qv43iP15YRgW/fRPtwywNRgdHmCue3U38a/9RWgfA62dR9tRcggcxPXIkvXOTYHSy8vB1uO
        j4kEQC8ixwCWz40nT2DL8eEyQP5y+F60FlQFqwGdEqv9nK4qbEQAVetF6K2Oi8GW44MpAFGxGeSSWOiV
        cK09Um6aspz+4IhEc5c0hSsr9U+iPtmaG7puQp8kfuIB9OLwNuo/nG6c5wvDVTtBLo1DhtzePmncPlw2
        AnTeY2wBhppTqaATDwD92eUg55kt784qFNLDtFlPdXy9bJQ3mn2AL00pkxAAm9FGlKTx5XiakZkAkxtg
        gJ9nM1O9Pm+gn2gJV+HqAaSAgexdtjVkRyYo6hJRaG5NX01CIC5xH/QFswbtgpDaCWP37eZBWZKU2gEU
        QoBLnIA3uXPRLmRY5fwKfeeND99azrXSa6rjE3DJDP8yLNYvPK81LqpxW+MAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>